{"version":3,"sources":["webpack:///./src/app/customerpayment/customerpayment.module.ts","webpack:///./src/app/customerpayment/customerpayment.page.html","webpack:///./src/app/customerpayment/customerpayment.page.scss","webpack:///./src/app/customerpayment/customerpayment.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEgB;AAE7D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yEAAmB;KAC/B;CACF,CAAC;AAWF;IAAA;IAAwC,CAAC;IAA5B,yBAAyB;QATrC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,yEAAmB,CAAC;SACpC,CAAC;OACW,yBAAyB,CAAG;IAAD,gCAAC;CAAA;AAAH;;;;;;;;;;;;ACzBtC,iZAAiZ,qdAAqd,eAAe,mBAAmB,iBAAiB,8E;;;;;;;;;;;ACAz5B,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACA;AACF;AACT;AAQvC;IAKC,6BACQ,MAAsB,EACpB,IAAgB,EAChB,MAAc;QAFhB,WAAM,GAAN,MAAM,CAAgB;QACpB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QAEtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACvB,CAAC;IAEF,sCAAQ,GAAR;QACC,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC3B,CAAC;IAED,gDAAkB,GAAlB;QAAA,iBA+BC;QA9BC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,GAAC,wBAAwB,CAAC;QAEnD,IAAI,IAAI,GAAG;YACV,WAAW,EAAG,IAAI,CAAC,MAAM,CAAC,UAAU;YACrC,UAAU,EAAG,IAAI,CAAC,MAAM,CAAC,QAAQ;YACjC,QAAQ,EAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;SACnC,CAAC;QAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAC/B,GAAG,EACJ,IAAI,EACJ;YACC,YAAY,EAAE,MAAM;SACpB,CACD,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,SAAS,CACxB,cAAI;YACH,IAAG,IAAI,IAAI,IAAI,EAAC;gBACf,IAAG,IAAI,YAAY,KAAK,EAAC;oBACxB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC5B;qBAAI;oBACH,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;iBAC/B;aACD;QACF,CAAC,CACD,CAAC;IACH,CAAC;IAhDW,mBAAmB;QAL/B,+DAAS,CAAC;YACV,QAAQ,EAAE,qBAAqB;;;SAG/B,CAAC;yCAOe,+DAAc;YACd,+DAAU;YACR,sDAAM;OARZ,mBAAmB,CAkD/B;IAAD,0BAAC;CAAA;AAlD+B","file":"customerpayment-customerpayment-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CustomerpaymentPage } from './customerpayment.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CustomerpaymentPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CustomerpaymentPage]\n})\nexport class CustomerpaymentPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      <i class=\\\"fas fa-cash-register fa-fw\\\"></i>\\n      Customer & Payment\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\t<div class=\\\"text-xs-center line-11\\\" *ngIf=\\\"customererror==true\\\" style=\\\"margin:30px 0;\\\">\\n\\t\\tNo Customer Data Received\\n\\t\\t<small>\\n\\t\\t\\t<b>\\n\\t\\t\\t\\t( Error ketika terima data )\\n\\t\\t\\t</b>\\n\\t\\t</small>\\n\\t</div>\\n\\t<table class=\\\"table\\\" *ngIf=\\\"customererror==false\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<th class=\\\"text-xs-left\\\">Customers</th>\\n\\t\\t\\t\\t<th>Phone Num.</th>\\n\\t\\t\\t\\t<th class=\\\"text-xs-right\\\">Payment</th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\t\\t<tbody *ngFor=\\\"let customer of customers\\\">\\n\\t\\t<tr>\\n\\t\\t\\t<td class=\\\"text-xs-left\\\">{{customer.name}}</td>\\n\\t\\t\\t<td>{{customer.phone1}}</td>\\n\\t\\t\\t<td></td>\\n\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n</ion-content>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {GlobalsService} from \"../globals.service\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\n\n@Component({\n\tselector: 'app-customerpayment',\n\ttemplateUrl: './customerpayment.page.html',\n\tstyleUrls: ['./customerpayment.page.scss'],\n})\nexport class CustomerpaymentPage implements OnInit {\n    customers: any;\n\t\thttpresult: Observable<any>;\n\t\tcustomererror: boolean;\n\n\tconstructor(\n\t\tpublic global: GlobalsService,\n    public http: HttpClient,\n    public router: Router\n\t) {\n\t  this.customers = null;\n  }\n\n\tngOnInit() {\n\t\tthis.getcustomerpayment();\n\t}\n\t\n\tgetcustomerpayment(){\n\t  this.customers = null;\n\t  let url = this.global.api+\"select/customerpayment\";\n\t  \n\t  let post = {\n\t  \t'app_token' : this.global.logintoken,\n\t\t\t'usertype'\t: this.global.usertype,\n\t\t\t'userID'\t\t: this.global.userdata.id\n\t\t};\n\t  \n\t  this.httpresult = this.http.post(\n\t  \turl,\n\t\t\tpost,\n\t\t\t{\n\t\t\t\tresponseType: 'json'\n\t\t\t}\n\t\t);\n\t  \n\t  this.httpresult.subscribe(\n\t  \tdata => {\n\t  \t\tif(data != null){\n\t  \t\t\tif(data instanceof Array){\n\t  \t\t\t\tthis.customers = data;\n\t  \t\t\t\tthis.customererror = false;\n\t\t\t\t\t}else{\n\t  \t\t\t\tthis.customererror = true;\n\t  \t\t\t\tthis.router.navigateByUrl('');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n}\n"],"sourceRoot":""}