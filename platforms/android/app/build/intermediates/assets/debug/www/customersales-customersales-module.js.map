{"version":3,"sources":["webpack:///./src/app/customersales/customersales.module.ts","webpack:///./src/app/customersales/customersales.page.html","webpack:///./src/app/customersales/customersales.page.scss","webpack:///./src/app/customersales/customersales.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEY;AAEzD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAiB;KAC7B;CACF,CAAC;AAWF;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QATnC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qEAAiB,CAAC;SAClC,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBpC,m0B;;;;;;;;;;;ACAA,+DAA+D,2J;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACA;AACF;AACT;AAE0B;AAOjE;IAGC,2BACQ,MAAsB,EACtB,IAAgB,EAChB,MAAc,EACb,cAA8B;QAH/B,WAAM,GAAN,MAAM,CAAgB;QACtB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACb,mBAAc,GAAd,cAAc,CAAgB;QAEtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,oCAAQ,GAAR;QACC,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC7B,CAAC;IAED,gDAAoB,GAApB;QACC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,2CAAe,GAAf;QACC,IAAM,OAAO,GAA0B;YACtC,iBAAiB,EAAE,KAAK;YACxB,oBAAoB,EAAE,KAAK;YAC3B,eAAe,EAAE,IAAI;YACrB,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,sCAAsC;YAC9C,qBAAqB,EAAE,GAAG;YAC1B,OAAO,EAAE,kBAAkB;YAC3B,WAAW,EAAE,UAAU;SACvB,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEvB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,qBAAW;YAC1C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACzB,IAAG,WAAW,CAAC,SAAS,EAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;aAC9B;iBAAI;gBACJ,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,GAAC,IAAI,GAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACtD;QACF,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;YACX,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAGH;;aAEK;QAEL;;;;;;aAMK;IACN,CAAC;IAzDW,iBAAiB;QAL7B,+DAAS,CAAC;YACV,QAAQ,EAAE,mBAAmB;YAC7B,iHAAwC;;SAExC,CAAC;yCAKe,+DAAc;YAChB,+DAAU;YACR,sDAAM;YACG,gFAAc;OAP3B,iBAAiB,CAqE7B;IAAD,wBAAC;CAAA;AArE6B","file":"customersales-customersales-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CustomersalesPage } from './customersales.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CustomersalesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [CustomersalesPage]\r\n})\r\nexport class CustomersalesPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      <i class=\\\"far fa-clipboard-list fa-fw\\\"></i>\\r\\n      Customer & Sales\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card class=\\\"welcome-card\\\">\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle>Get Started</ion-card-subtitle>\\r\\n      <ion-card-title> QR Code and Barcode </ion-card-title>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <p>Here we can scan a Qr code or Barcode to get data and we will also see how to generate Barcode.</p>\\r\\n    </ion-card-content>\\r\\n    <ion-button (click)=\\\"goToBarcodeScan()\\\">Click to scan a barcode</ion-button>\\r\\n  </ion-card>\\r\\n\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyc2FsZXMvY3VzdG9tZXJzYWxlcy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {GlobalsService} from \"../globals.service\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Router} from \"@angular/router\";\r\nimport {BarcodeScannerOptions} from \"@ionic-native/barcode-scanner/ngx\";\r\nimport {BarcodeScanner} from \"@ionic-native/barcode-scanner/ngx\";\r\n\r\n@Component({\r\n\tselector: 'app-customersales',\r\n\ttemplateUrl: './customersales.page.html',\r\n\tstyleUrls: ['./customersales.page.scss'],\r\n})\r\nexport class CustomersalesPage implements OnInit {\r\n\tcustomers: any;\r\n\r\n\tconstructor(\r\n\t\tpublic global: GlobalsService,\r\n\t\tpublic http: HttpClient,\r\n\t\tpublic router: Router,\r\n\t\tprivate barcodeScanner: BarcodeScanner\r\n\t) {\r\n\t\tthis.customers = null;\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.getcustomersalesdata();\r\n\t}\r\n\t\r\n\tgetcustomersalesdata(){\r\n\t\tthis.customers = null;\r\n\t}\r\n\t\r\n\tgoToBarcodeScan() {\r\n\t\tconst options: BarcodeScannerOptions = {\r\n\t\t\tpreferFrontCamera: false,\r\n\t\t\tshowFlipCameraButton: false,\r\n\t\t\tshowTorchButton: true,\r\n\t\t\ttorchOn: false,\r\n\t\t\tprompt: 'Place a barcode inside the scan area',\r\n\t\t\tresultDisplayDuration: 500,\r\n\t\t\tformats: 'QR_CODE,PDF_417 ',\r\n\t\t\torientation: 'portrait',\r\n\t\t};\r\n\t\t\r\n\t\tconsole.log(\"abcdefg\");\r\n\t\t\r\n\t\tthis.barcodeScanner.scan().then(barcodeData => {\r\n\t\t\tconsole.log(barcodeData);\r\n\t\t\tif(barcodeData.cancelled){\r\n\t\t\t\tconsole.log(\"Cancel by user\");\r\n\t\t\t}else{\r\n\t\t\t\tconsole.log(barcodeData.format+\": \"+barcodeData.text);\r\n\t\t\t}\r\n\t\t}).catch(err => {\r\n\t\t\tconsole.log('Error', err);\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\t/*this.barcodeScanner.scan().then(barcodeData => {\r\n\t\t\tconsole.log(\"TAI KUDA\");\r\n\t\t});*/\r\n\t\t\r\n\t\t/*this.barcode.scan(options).then(barcodeData => {\r\n\t\t\tconsole.log('Barcodgloe data', barcodeData);\r\n\t\t\tthis.scannedData = barcodeData;\r\n\r\n\t\t}).catch(err => {\r\n\t\t\tconsole.log('Error', err);\r\n\t\t});*/\r\n\t}\r\n\t\r\n\t\r\n\t// goToCreateCode() {\r\n\t// \t// \tthis.barcodeCtrl.encode(this.barcodeCtrl.Encode.TEXT_TYPE, this.encodeData).then((encodedData) => {\r\n\t// \t// \t\tconsole.log(encodedData);\r\n\t// \t// \t\tthis.encodedData = encodedData;\r\n\t// \t// \t}, (err) => {\r\n\t// \t// \t\tconsole.log('Error occured : ' + err);\r\n\t// \t// \t});\r\n\t// \t// }\r\n\r\n}\r\n"],"sourceRoot":""}